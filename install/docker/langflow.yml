x-healthcheck: &x-healthcheck
  interval: 10s
  timeout: 5s
  retries: 5
  start_period: 10s

services:
  onlyoffice-langflow-backend:
    image: ${HUB}${ONLYFLOW_IMAGE_NAME}-backend:${ONLYFLOW_VERSION}
    container_name: ${ONLYFLOW_HOST}-backend
    restart: always
    expose:
      - "${ONLYFLOW_BACKEND_PORT}"
    environment:
      - LANGFLOW_DATABASE_URL=postgresql://langflow:langflow@${ONLYFLOW_PG_HOST}:${ONLYFLOW_PG_PORT}/langflow
    depends_on:
      onlyoffice-langflow-postgres
    healthcheck:
      test: ["CMD-SHELL", "python3 -c \"import urllib.request; urllib.request.urlopen('http://${ONLYFLOW_HOST}-backend:${ONLYFLOW_BACKEND_PORT}/health')\" || exit 1"]
      <<: *x-healthcheck

  onlyoffice-langflow-frontend:
    image: ${HUB}${ONLYFLOW_IMAGE_NAME}-frontend:${ONLYFLOW_VERSION}
    container_name: ${ONLYFLOW_HOST}-frontend
    restart: always
    expose:
      - "${ONLYFLOW_FRONTEND_PORT}"
    environment:
      - BACKEND_URL=http://${ONLYFLOW_HOST}-backend:${ONLYFLOW_BACKEND_PORT}
      - FRONTEND_PORT=${ONLYFLOW_FRONTEND_PORT}
    depends_on:
      onlyoffice-langflow-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${ONLYFLOW_HOST}-frontend:${ONLYFLOW_FRONTEND_PORT}/onlyflow/health"]
      <<: *x-healthcheck

  onlyoffice-langflow-postgres:
    container_name: ${ONLYFLOW_PG_HOST}
    image: ${HUB}${ONLYFLOW_PG_IMAGE_NAME}
    environment:
      POSTGRES_USER: langflow
      POSTGRES_PASSWORD: langflow
      POSTGRES_DB: langflow
    expose:
      - "${ONLYFLOW_PG_PORT}"
    volumes:
      - ${VOLUMES_DIR:+${VOLUMES_DIR}/}langflow_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "langflow"]
      <<: *x-healthcheck

networks:
  default:
    name: onlyoffice
    external: true

volumes:
  langflow_data:
  langflow_pg_data:
