services:
  onlyoffice-langflow:
    image: ${HUB}${ONLYFLOW_IMAGE_NAME}
    container_name: ${ONLYFLOW_HOST}
    restart: always
    expose:
      - "${ONLYFLOW_BACKEND_PORT}"
    environment:
      - DO_NOT_TRACK=true
      - LANGFLOW_LOG_LEVEL=${LOG_LEVEL}
      - LANGFLOW_CONFIG_DIR=/app/langflow
      - LANGFLOW_NEW_USER_IS_ACTIVE=False
      - LANGFLOW_DATABASE_URL=postgresql://langflow:langflow@${ONLYFLOW_PG_HOST}:${ONLYFLOW_PG_PORT}/langflow
    volumes:
      - ${VOLUMES_DIR:+${VOLUMES_DIR}/}langflow_data:/app
    depends_on:
      - onlyoffice-langflow-postgres
    healthcheck:
      test: ["CMD-SHELL", "python3 -c \"import urllib.request; urllib.request.urlopen('http://${ONLYFLOW_HOST}:${ONLYFLOW_BACKEND_PORT}/health_check')\" || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  onlyoffice-langflow-postgres:
    container_name: ${ONLYFLOW_PG_HOST}
    image: ${HUB}${ONLYFLOW_PG_IMAGE_NAME}
    environment:
      POSTGRES_USER: langflow
      POSTGRES_PASSWORD: langflow
      POSTGRES_DB: langflow
    expose:
      - "${ONLYFLOW_PG_PORT}"
    volumes:
      - ${VOLUMES_DIR:+${VOLUMES_DIR}/}langflow_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "langflow"]
      interval: 10s
      retries: 5
      start_period: 10s

networks:
  default:
    name: onlyoffice
    external: true

volumes:
  langflow_data:
  langflow_pg_data:
