map $http_host $this_host {
  "" $host;
  default $http_host;
}

map $http_cloudfront_forwarded_proto $cloudfront_forwarded_proto {
    default $http_cloudfront_forwarded_proto;
    "" $scheme;
}

map $http_x_forwarded_proto $proxy_x_forwarded_proto {
  default $http_x_forwarded_proto;
  "" $cloudfront_forwarded_proto;
}

map $http_x_forwarded_port $proxy_x_forwarded_port {
  default $http_x_forwarded_port;
  '' $server_port;
}

map $http_x_forwarded_host $proxy_x_forwarded_host {
  default $http_x_forwarded_host;
  "" $this_host;
}

map $scheme $proxy_x_forwarded_ssl {
  default off;
  https on;
}

map $http_upgrade $proxy_connection {
  default upgrade;
  '' close;
}

map $uri $basename {
    ~/(?<captured_basename>[^/]*)$ $captured_basename;
}

map $request_uri $header_x_frame_options {
  ~*^/(favicon\.ico|products\/files\/share|products\/files\/saveas|products\/files\/filechoice|products\/files\/doceditor|thirdparty\/plugin) "";
  default "SAMEORIGIN";
}

map $request_uri $cache_control {
  default "no-cache, no-store, no-transform";
  ~*\/(filehandler\.ashx\?action=(thumb|preview))|\/(storage\/room_logos\/root\/.*\?hash.*|storage\/userPhotos\/root\/.*\?hash.*|storage\/whitelabel\/root\/.*\?hash.*|storage\/static_partnerdata\/root\/.*\?hash.*) "must-revalidate, no-transform, immutable, max-age=31536000, private";
  ~*\/(api\/2\.0.*|storage|login\.ashx|filehandler\.ashx|ChunkedUploader.ashx|ThirdPartyAppHandler|apisystem|\/s\/|remoteEntry\.js|debuginfo\.md|static\/scripts\/api\.js|static\/scripts\/sdk\/.*|static\/scripts\/api\.poly\.js) "no-cache, no-store, no-transform";
  ~*\/(static\/images\/.*)|\/(_next\/public\/images\/.*)|\.(js|woff|woff2|css)|(locales.*\.json) "must-revalidate, no-transform, immutable, max-age=31536000";
}

map $request_uri $content_security_policy {
        "" "";
        ~*\/(ds-vpath)\/ "default-src *; script-src * 'unsafe-inline' 'unsafe-eval'; script-src-elem * 'unsafe-inline'; img-src * data:; style-src * 'unsafe-inline' data:; font-src * data:; frame-src * ascdesktop:; object-src; connect-src * ascdesktop:;";
}

map $request_time $request_time_ms {
    ~^0\.000$ 0;
    ~^0\.(?:0*)([^0].*)$ $1;
    ~^([^0][^.]*)\.(.*)$ $1$2;
}

map $scheme $client_service_url {
  default "http://127.0.0.1:5001";
}

map $scheme $management_service_url {
  default "http://127.0.0.1:5015";
}

map $scheme $doceditor_service_url {
  default "http://127.0.0.1:5013";
}

map $scheme $doceditor_url {
  default "http://127.0.0.1:8085";
}

map $scheme $login_service_url {
  default "http://127.0.0.1:5011";
}

map $scheme $sockjs_node_url {
  default "http://127.0.0.1:5001";
}

map $scheme $api_system_url {
  default "http://127.0.0.1:5010";
}

map $scheme $webapi_service_url {
  default "http://127.0.0.1:5000";
}

map $scheme $webstudio_service_url {
  default "http://127.0.0.1:5003";
}

map $scheme $people_service_url {
  default "http://127.0.0.1:5004";
}

map $scheme $files_service_url {
  default "http://127.0.0.1:5007";
}

map $scheme $backup_service_url {
  default "http://127.0.0.1:5012";
}

map $scheme $plugins_service_url {
  default "http://127.0.0.1:5014";
}

map $scheme $migration_service_url {
  default "http://127.0.0.1:5034";
}

map $scheme $clients_service_url {
  default "http://127.0.0.1:9090";
}

map $scheme $oauth2_service_url {
  default "http://127.0.0.1:8080";
}

map $scheme $sso_service_url {
  default "http://127.0.0.1:9834";
}

map $scheme $socket_io_url {
  default "http://127.0.0.1:9899";
}

map $scheme $api_cache_url {
  default "http://127.0.0.1:5100";
}

map $scheme $health_checks_url {
  default "http://127.0.0.1:5033";
}

server_names_hash_bucket_size 128;

include /etc/nginx/includes/onlyoffice-*.conf;

server {
	listen       8092;

    add_header Referrer-Policy "same-origin";
	add_header X-Content-Type-Options "nosniff";
	add_header X-Frame-Options $header_x_frame_options;
	add_header Cache-Control $cache_control;
	add_header Permissions-Policy "autoplay=(), geolocation=(), camera=(), interest-cohort=()";

	root $public_root;
	etag on;

	large_client_header_buffers 4 16k;
	client_max_body_size    4G;

	gzip on;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
	gzip_comp_level 4;
	gzip_min_length  1000;
	gzip_proxied     any;

	fastcgi_read_timeout    600;
	fastcgi_send_timeout    600;
	fastcgi_keep_conn on;
	fastcgi_intercept_errors on;

	include fastcgi_params;

	fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
	fastcgi_param PATH_INFO "";

	proxy_http_version 1.1;
	proxy_set_header Host $this_host;
	proxy_set_header X-Real-IP  $remote_addr;
	proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
	proxy_set_header X-Forwarded-Ssl $proxy_x_forwarded_ssl;
	proxy_set_header X-Forwarded-Host $proxy_x_forwarded_host;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection $proxy_connection;
	proxy_set_header Proxy "";
	proxy_buffering off;
			
	set $csp "";
	access_by_lua '
	local accept_header = ngx.req.get_headers()["Accept"]
	if ngx.req.get_method() == "GET" and accept_header ~= nil and string.find(accept_header, "html") and not ngx.re.match(ngx.var.request_uri, "ds-vpath|/api/") then

		local key = string.format("csp:%s",ngx.var.host)
		local redis = require "resty.redis"
		local red = redis:new()
		local redis_host = "127.0.0.1"
		local redis_port = 6379
		local redis_pass = ""
		local redis_db = 0

		red:set_timeout(1000) -- 1 second

		local ok, err = red:connect(redis_host, redis_port)
		if not ok then
			ngx.log(ngx.ERR, "failed to connect to redis: ", err)
			return
		end

		if redis_pass ~= "" then
			local res, err = red:auth(redis_pass)
			if not res then
				ngx.log(ngx.ERR, "failed to authenticate: ", err)
				return
			end
		end

		if redis_db ~= 0 then
			local res, err = red:select(redis_db)
			if not res then
				ngx.log(ngx.ERR, "failed to select redis db: ", err)
				return
			end
		end

		local csp, err = red:hget(key, "data")

		if csp == ngx.null or not csp then
			ngx.log(ngx.INFO, "failed to get redis key: ", err)
		else
			 if pcall(require "cjson".decode, csp) then
				local data, errDecode = require "cjson".decode(csp)
				ngx.header.Content_Security_Policy = data["Value"]
			else
				ngx.header.Content_Security_Policy = csp
			end
		end
	end
	';

	location ~* ^/ds-vpath/ {
		rewrite /ds-vpath/(.*) /$1  break;

		proxy_pass $doceditor_url;
		proxy_redirect     off;

		client_max_body_size 100m;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $proxy_connection;

		proxy_set_header Host $http_host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $proxy_x_forwarded_host/ds-vpath;
		proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto;
		add_header Content-Security-Policy $content_security_policy;

	}

	include /etc/nginx/includes/server-*.conf;

	location / {
		proxy_pass $client_service_url;
		proxy_redirect off;
		location ~* /(manifest.json|sw.js|appIcon(.)*\.png|icon.svg|bg-error.png|debuginfo.md) {
			try_files /$basename /index.html =404;
		}


 		location ~* /static/css/ {
			try_files /css/$basename /index.html =404;
		}

        location ~* /static/fonts/(?<content>[^/]+) {
			try_files /fonts/$content/$basename /index.html =404;
		}

		location ~* /static/offline/ {
			try_files /offline/$basename /index.html =404;
        }

		location ~* /thirdparty/ {
			try_files /thirdparty/third-party.html /index.html =404;
        }

		location ~* /static/locales/(?<content>[^/]+) {
			try_files /locales/$content/$basename /index.html =404;
        }

		location ~* /static/scripts/(.*)$ {
			try_files /scripts/$1 /index.html =404;
		}

		location ~* /static/plugins/ {
			try_files /plugins/$basename /index.html =404;
		}

		location ~* /static/images/(.*)$ {
			try_files /images/$1 /index.html =404;
		}

		location ~* /static/campaigns/(.*)$ {
			try_files /campaigns/$1 /index.html =404;
		}

	}

	location /sdk {
		proxy_pass $sockjs_node_url;
		proxy_redirect off;

		add_header Cache-Control '';

		location ~* /_next/public/images/(.*)$ {
			try_files /images/$1 /index.html =404;
		}

		location ~*/_next/static/(chunks|css|media)/(.*)$ {
			root /var/www/build/sdk/static;
			try_files /$1/$2 @wrong_sdk_chunk;
        }
	}

	location @wrong_sdk_chunk {
		proxy_pass $sockjs_node_url;
		proxy_redirect off;
	}

	location /doceditor {
		proxy_pass $doceditor_service_url;
		proxy_redirect off;

		location ~* /_next/public/images/(.*)$ {
			try_files /images/$1 /index.html =404;
		}

		location ~*/_next/static/(chunks|css|media)/(.*)$ {
			root /var/www/build/doceditor/static;
			try_files /$1/$2 @wrong_doceditor_chunk;
        }
	}

	location @wrong_doceditor_chunk {
		proxy_pass $doceditor_service_url;
		proxy_redirect off;
	}

	location /login {
		proxy_pass $login_service_url;
		proxy_redirect off;

		location ~* /_next/public/images/(.*)$ {
			try_files /images/$1 /index.html =404;
		}
		
		location ~*/_next/static/(chunks|css|media)/(.*)$ {
			root /var/www/build/login/static;
			try_files /$1/$2 @wrong_login_chunk;
        }
    }
	
	location @wrong_login_chunk {
		proxy_pass $login_service_url;
		proxy_redirect off;
	}

	location /confirm {

        rewrite confirm(?:\.aspx\/?|\/?)(.*) /login/confirm/$1 break;
     	proxy_pass $login_service_url;
		proxy_redirect off;

		proxy_buffer_size 128k;
        proxy_buffers 8 128k;
        proxy_busy_buffers_size 256k;

		location ~* /_next/public/images/(.*)$ {
			try_files /images/$1 /index.html =404;
		}
    }

    location /wizard {

        rewrite wizard /login/wizard break;
     	proxy_pass $login_service_url;
		proxy_redirect off;

		location ~* /_next/public/images/(.*)$ {
			try_files /images/$1 /index.html =404;
		}
    }

	location /management {
		proxy_pass $management_service_url;
		proxy_redirect off;

		location ~* /_next/public/images/(.*)$ {
			try_files /images/$1 /index.html =404;
		}
		
		location ~*/_next/static/(chunks|css|media)/(.*)$ {
			root /var/www/build/management/static;
			try_files /$1/$2 @wrong_management_chunk;
        }
    }
	
	location @wrong_management_chunk {
		proxy_pass http://127.0.0.1:5015;
		proxy_redirect off;
	}

	location ~* /static/fonts/(?<content>[^/]+) {
		try_files /fonts/$content/$basename /index.html =404;
	}

	location /sockjs-node {
		proxy_pass $sockjs_node_url;
		proxy_redirect off;
	}

	location ~* /s/(.*) {
		proxy_pass $webapi_service_url;
	}

	location /openapi {
		proxy_pass $webstudio_service_url;

		location ~*/asc.apisystem {
		    proxy_pass $api_system_url;
	    }
		
		location ~*/asc.web.api {
			proxy_pass $webapi_service_url;
		}

		location ~*/asc.people {
			proxy_pass $people_service_url;
		}

		location ~*/asc.files {
			proxy_pass $files_service_url;
		}

		location ~*/asc.data.backup {
			proxy_pass $backup_service_url;
		}
	}

	location /api/2.0 {
        add_header Trailer Server-Timing;
        add_header Server-Timing "proxy-request-time;dur=${request_time_ms}";

		location ~* /(files|privacyroom) {
			 proxy_pass $files_service_url;
		}

		location ~* /(people|group|accounts|keys) {
			 proxy_pass $people_service_url;
		}

		location ~* /(authentication|modules|portal|security|settings|smtpsettings|capabilities|thirdparty|encryption|feed|migration) {
			 proxy_pass $webapi_service_url;

			 location ~* portal/(.*)(backup|restore)(.*) {
				 rewrite (.*)/portal/(.*) $1/backup/$2  break;
				 proxy_redirect     off;
				 proxy_pass $backup_service_url;
			}

			location ~* authentication/register(.*) {
				 rewrite (.*)/authentication/register(.*) $1/people/register$2  break;
				 proxy_redirect     off;
				 proxy_pass $people_service_url;
			}
		}

		location ~* /backup {
			 proxy_pass $backup_service_url;
		}

		location ~* /plugins {
			 proxy_pass $plugins_service_url;
		}

        location ~* /migration {
			 proxy_pass $migration_service_url;
		}

		location ~* /(clients|scopes) {
			 proxy_pass $clients_service_url;
		}

		location ~* /oauth2 {
			rewrite api/2.0/(.*) /$1  break;
			proxy_redirect off;
			proxy_pass $oauth2_service_url;
		}
    }

	location /oauth2/.well-known/openid-configuration {
		rewrite oauth2/(.*) /$1  break;
		proxy_pass $oauth2_service_url;
	}

	location /oauth2 {
		proxy_pass $oauth2_service_url;
	}

	location /sso {
		rewrite sso/(.*) /$1  break;
		proxy_pass $sso_service_url;
	}

	location ~* /storage/files_template/ {
		proxy_pass $files_service_url;
	}

	location ~* /(ssologin.ashx|login.ashx|storage) {
		proxy_pass $webstudio_service_url;
	}

	location /socket.io/ {
		proxy_pass $socket_io_url;
		proxy_redirect off;
	}

	location /backupFileUpload.ashx {
		proxy_pass $backup_service_url;
	}

	location /migrationFileUpload.ashx {
		proxy_pass $webapi_service_url;
	}

	location /logoUploader.ashx {
		proxy_pass $webapi_service_url;
	}

	location /logo.ashx {
		proxy_pass $webapi_service_url;
	}

	location /payment.ashx {
		proxy_pass $webapi_service_url;
	}

	location /ThirdPartyApp {
		proxy_pass $files_service_url;
	}

	location ~* /filehandler.ashx {
		proxy_pass $files_service_url;
		proxy_intercept_errors on;
		error_page 403 = @filehandler_redirect;
	}

	location @filehandler_redirect {
		return 302 shared/invalid-link;
	}

	location /ChunkedUploader.ashx {
		proxy_pass $files_service_url;
	}

	location /apisystem {
		rewrite apisystem/(.*) /$1  break;
		proxy_pass $api_system_url;
	}

	location /apicache {
		rewrite apicache/(.*) /$1  break;
		proxy_pass $api_cache_url;
	}

	location  /healthchecks {
		rewrite /healthchecks/(.*)$ /$1 break;
		proxy_pass $health_checks_url;
    }

	error_page 401 /custom_401.html;
    location = /custom_401.html {
        root /etc/nginx/html;
        internal;
    }

	error_page 403 /custom_403.html;
    location = /custom_403.html {
        root /etc/nginx/html;
        internal;
    }

	error_page 404 /custom_404.html;
    location = /custom_404.html {
        root /etc/nginx/html;
        internal;
    }

    error_page 500 502 503 504 /custom_50x.html;
    location = /custom_50x.html {
        root /etc/nginx/html;
        internal;
    }
}
